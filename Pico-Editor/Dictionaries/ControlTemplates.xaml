<!--
	MIT License

Copyright (c) 2022        Daniel McLarty
Copyright (c) 2020-2022   Arash Khatami

Permission is hereby granted, free of charge, to any person obtaining a copy
of this software and associated documentation files (the "Software"), to deal
in the Software without restriction, including without limitation the rights
to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
copies of the Software, and to permit persons to whom the Software is
furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in all
copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
SOFTWARE.
-->
	
<ResourceDictionary x:Class="Pico_Editor.Dictionaries.ControlTemplates"
					xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
					xmlns:local="clr-namespace:Pico_Editor.Dictionaries">

	<Style TargetType="{x:Type TextBlock}" x:Key="LightTextBlockStyle">
		<Setter Property="Foreground" Value="{StaticResource Editor.FontBrush}"/>
		<Setter Property="VerticalAlignment" Value="Center"/>
		<Setter Property="HorizontalAlignment" Value="Left"/>
	</Style>
	
	<Style TargetType="{x:Type TextBox}" x:Key="TextBoxStyle">
		<Setter Property="Foreground" Value="{StaticResource Editor.FontBrush}"/>
		<Setter Property="Background" Value="{StaticResource Editor.Window.GrayBrush2}"/>
		<Setter Property="BorderBrush" Value="{StaticResource Editor.Window.GrayBrush4}"/>
		<Setter Property="SelectionBrush" Value="White"/>
		<Setter Property="VerticalAlignment" Value="Center"/>
		<Setter Property="HorizontalAlignment" Value="Left"/>
		<Setter Property="Padding" Value="0,2"/>
	</Style>

	<Style TargetType="{x:Type TextBox}" x:Key="{x:Type TextBox}" BasedOn="{StaticResource TextBoxStyle}">
		<EventSetter Event="KeyDown" Handler="OnTextBox_KeyDown"/>
	</Style>

	<Style x:Key="SimpleButton" TargetType="{x:Type Button}">
		<Setter Property="Background"					Value="{StaticResource Editor.Window.GrayBrush3}"/>
		<Setter Property="BorderBrush"					Value="{StaticResource Editor.Window.GrayBrush5}"/>
		<Setter Property="Foreground"					Value="{StaticResource Editor.FontBrush}"/>
		<Setter Property="BorderThickness"				Value="0"/>
		<Setter Property="HorizontalContentAlignment"	Value="Center"/>
		<Setter Property="VerticalContentAlignment"		Value="Center"/>
		<Setter Property="VerticalAlignment"			Value="Center"/>
		<Setter Property="Padding"						Value="0"/>

		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type Button}">
					<Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}"
							Background="{TemplateBinding Background}" SnapsToDevicePixels="True">
						<ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
										  Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
										  VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
					</Border>
					<ControlTemplate.Triggers>
						<Trigger Property="IsMouseOver" Value="True">
							<Setter Property="Background" TargetName="border" Value="{StaticResource Editor.Window.GrayBrush5}"/>
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
		
	<Style x:Key="PicoWindowStyle" TargetType="{x:Type Window}">
		<Setter Property="BorderBrush" Value="{StaticResource Editor.Selected.BackgroundBrush}"/>
		<Setter Property="Background" Value="{StaticResource Editor.Window.GrayBrush1}"/>
		<Setter Property="WindowChrome.WindowChrome">
			<Setter.Value>
				<WindowChrome
					CornerRadius="0"
					ResizeBorderThickness="{x:Static SystemParameters.WindowResizeBorderThickness}"
					GlassFrameThickness="0" CaptionHeight="20"
					NonClientFrameEdges="None"
					UseAeroCaptionButtons="False"/>
			</Setter.Value>
		</Setter>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type Window}">
					<Border BorderBrush="{TemplateBinding BorderBrush}" Background="{TemplateBinding Background}">
						<Border.Style>
							<Style TargetType="Border">
								<Setter Property="BorderThickness" Value="1"/>
								<Style.Triggers>
									<DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType={x:Type Window}}, Path=WindowState}" Value="Maximized">
										<Setter Property="BorderThickness" Value="{Binding Source={x:Static SystemParameters.WindowResizeBorderThickness}}"/>
									</DataTrigger>
								</Style.Triggers>
							</Style>
						</Border.Style>

						<Grid>
							<AdornerDecorator>
								<ContentPresenter Margin="5,24,5,5"/>
							</AdornerDecorator>
							
							<DockPanel VerticalAlignment="Top" LastChildFill="False">
								<DockPanel.Resources>
									<Style TargetType="Path">
										<Setter Property="Stroke" Value="{Binding Foreground, RelativeSource={RelativeSource AncestorType=Button}}"/>
										<Setter Property="StrokeThickness" Value="1"/>
									</Style>
									<Style TargetType="Button" BasedOn="{StaticResource SimpleButton}">
										<Setter Property="Width"									Value="24"/>
										<Setter Property="Height"									Value="14"/>
										<Setter Property="Margin"									Value="0,2,1,0"/>
										<Setter Property="VerticalAlignment"						Value="Top"/>
										<Setter Property="SnapsToDevicePixels"						Value="True"/>
										<Setter Property="DockPanel.Dock"							Value="Right"/>
										<Setter Property="WindowChrome.IsHitTestVisibleInChrome"	Value="True"/>
									</Style>
								</DockPanel.Resources>
								<TextBlock Margin="5,2,0,0" VerticalAlignment="Center"
									   DockPanel.Dock="Left" FontWeight="Bold"
									   Foreground="{StaticResource Editor.FontBrush}"
									   Text="{TemplateBinding Title}"/>

								<Button x:Name="btnClose" Click="OnClose_Button_Click">
									<Grid>
										<Path Data="M1,1.5L 8,8.5" Margin="0"/>
										<Path Data="M1,8.5L 8,1.5" Margin="0"/>
									</Grid>
								</Button>

								<Button x:Name="btnRestore" Click="OnMazimizeRestore_Button_Click">
									<Button.Content>
										<Rectangle Stroke="{StaticResource Editor.FontBrush}" StrokeThickness="1"
												   Width="10" Height="8"/>
									</Button.Content>
								</Button>

								<Button x:Name="btnMinimize" Click="OnMinimize_Button_Click">
									<Button.Content>
										<Rectangle Stroke="{StaticResource Editor.FontBrush}" StrokeThickness="1"
												   Width="10" Height="1" Margin="0,4,0,0"/>
									</Button.Content>
								</Button>
							</DockPanel>
						</Grid>
					</Border>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<Style x:Key="PicoDialogStyle" TargetType="{x:Type Window}">
		<Setter Property="BorderBrush" Value="{StaticResource Editor.Selected.BackgroundBrush}"/>
		<Setter Property="Background" Value="{StaticResource Editor.Window.GrayBrush1}"/>
		<Setter Property="WindowChrome.WindowChrome">
			<Setter.Value>
				<WindowChrome
					CornerRadius="0"
					ResizeBorderThickness="{x:Static SystemParameters.WindowResizeBorderThickness}"
					GlassFrameThickness="0" CaptionHeight="20"
					NonClientFrameEdges="None"
					UseAeroCaptionButtons="False"/>
			</Setter.Value>
		</Setter>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type Window}">
					<Border BorderBrush="{TemplateBinding BorderBrush}" Background="{TemplateBinding Background}">
						<Border.Style>
							<Style TargetType="Border">
								<Setter Property="BorderThickness" Value="1"/>
								<Style.Triggers>
									<DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType={x:Type Window}}, Path=WindowState}" Value="Maximized">
										<Setter Property="BorderThickness" Value="{Binding Source={x:Static SystemParameters.WindowResizeBorderThickness}}"/>
									</DataTrigger>
								</Style.Triggers>
							</Style>
						</Border.Style>

						<Grid>
							<AdornerDecorator>
								<ContentPresenter Margin="5,24,5,5"/>
							</AdornerDecorator>

							<DockPanel VerticalAlignment="Top" LastChildFill="False">
								<DockPanel.Resources>
									<Style TargetType="Path">
										<Setter Property="Stroke" Value="{Binding Foreground, RelativeSource={RelativeSource AncestorType=Button}}"/>
										<Setter Property="StrokeThickness" Value="1"/>
									</Style>
									<Style TargetType="Button" BasedOn="{StaticResource SimpleButton}">
										<Setter Property="Width"									Value="24"/>
										<Setter Property="Height"									Value="14"/>
										<Setter Property="Margin"									Value="0,2,1,0"/>
										<Setter Property="VerticalAlignment"						Value="Top"/>
										<Setter Property="SnapsToDevicePixels"						Value="True"/>
										<Setter Property="DockPanel.Dock"							Value="Right"/>
										<Setter Property="WindowChrome.IsHitTestVisibleInChrome"	Value="True"/>
									</Style>
								</DockPanel.Resources>
								<TextBlock Margin="5,2,0,0" VerticalAlignment="Center"
									   DockPanel.Dock="Left" FontWeight="Bold"
									   Foreground="{StaticResource Editor.FontBrush}"
									   Text="{TemplateBinding Title}"/>

								<Button x:Name="btnClose" Click="OnClose_Button_Click">
									<Grid>
										<Path Data="M1,1.5L 8,8.5" Margin="0"/>
										<Path Data="M1,8.5L 8,1.5" Margin="0"/>
									</Grid>
								</Button>
							</DockPanel>
						</Grid>
					</Border>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
</ResourceDictionary>