<!--
	MIT License

Copyright (c) 2022        Daniel McLarty
Copyright (c) 2020-2022   Arash Khatami

Permission is hereby granted, free of charge, to any person obtaining a copy
of this software and associated documentation files (the "Software"), to deal
in the Software without restriction, including without limitation the rights
to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
copies of the Software, and to permit persons to whom the Software is
furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in all
copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
SOFTWARE.
-->
	
<UserControl x:Class="Savage_Editor.Utilities.LoggerView"
			 xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
			 xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
			 xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
			 xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
			 xmlns:local="clr-namespace:Savage_Editor.Utilities"
			 mc:Ignorable="d" 
			 d:DesignHeight="450" d:DesignWidth="800">
	<UserControl.Resources>
		<Style TargetType="{x:Type ToggleButton}">
			<Setter Property="FocusVisualStyle" Value="{x:Null}"/>
			<Setter Property="Background" Value="{StaticResource Editor.Window.GrayBrush4}"/>
			<Setter Property="BorderThickness" Value="1"/>
			<Setter Property="Width" Value="18"/>
			<Setter Property="HorizontalContentAlignment" Value="Center"/>
			<Setter Property="VerticalContentAlignment" Value="Center"/>
			<EventSetter Event="Click" Handler="OnMessageFileter_Button_Click"/>
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="{x:Type ToggleButton}">
						<Border x:Name="outerBorder" BorderBrush="{TemplateBinding BorderBrush}" 
								BorderThickness="{TemplateBinding BorderThickness}" SnapsToDevicePixels="true">
							<Border x:Name="innerBorder" Background="{TemplateBinding Background}" Margin="1"/>
						</Border>
						<ControlTemplate.Triggers>
							<Trigger Property="IsMouseOver" Value="true">
								<Setter Property="BorderBrush" TargetName="outerBorder" Value="{Binding Background, ElementName=innerBorder}"/>
							</Trigger>
							<Trigger Property="IsChecked" Value="false">
								<Setter Property="Opacity" TargetName="innerBorder" Value="0.5"/>
							</Trigger>
							<Trigger Property="IsEnabled" Value="false">
								<Setter Property="Opacity" TargetName="innerBorder" Value="0.2"/>
							</Trigger>
						</ControlTemplate.Triggers>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>
	</UserControl.Resources>
	<Grid>
		<ScrollViewer VerticalScrollBarVisibility="Auto" HorizontalScrollBarVisibility="Auto" x:Name="scrollViewer" 
					  Background="{StaticResource Editor.Window.GrayBrush2}">
			<ItemsControl ItemsSource="{Binding Source={x:Static local:Logger.FilterdMessages}}">
				<ItemsControl.ItemsPanel>
					<ItemsPanelTemplate>
						<StackPanel/>
					</ItemsPanelTemplate>
				</ItemsControl.ItemsPanel>
				<ItemsControl.ItemTemplate>
					<DataTemplate>
						<DockPanel ToolTip="{Binding MetaData}">
							<DockPanel.Style>
								<Style TargetType="DockPanel">
									<Setter Property="Background" Value="Transparent"/>
									<Style.Triggers>
										<Trigger Property="IsMouseOver" Value="True">
											<Setter Property="Background">
												<Setter.Value>
													<SolidColorBrush Color="{StaticResource Editor.Selected.BackgroundColor}" Opacity="0.5"/>
												</Setter.Value>
											</Setter>
										</Trigger>
									</Style.Triggers>
								</Style>
							</DockPanel.Style>
							<TextBlock Text="{Binding Time, StringFormat=hh:mm:ss}" Margin="5,0">
								<TextBlock.Style>
									<Style TargetType="TextBlock">
										<Setter Property="Foreground" Value="{StaticResource Editor.BlueBrush}"/>
										<Style.Triggers>
											<DataTrigger Binding="{Binding MessageType}" Value="{x:Static local:MessageType.Warning}">
												<Setter Property="Foreground" Value="{StaticResource Editor.OrangeBrush}"/>
											</DataTrigger>
											<DataTrigger Binding="{Binding MessageType}" Value="{x:Static local:MessageType.Error}">
												<Setter Property="Foreground" Value="{StaticResource Editor.RedBrush}"/>
											</DataTrigger>
										</Style.Triggers>
									</Style>
								</TextBlock.Style>
							</TextBlock>
							<TextBlock Text="{Binding Message}" TextWrapping="Wrap" Style="{StaticResource LightTextBlockStyle}"/>
						</DockPanel>
					</DataTemplate>
				</ItemsControl.ItemTemplate>
			</ItemsControl>
		</ScrollViewer>
		<Border Height="32" VerticalAlignment="Top" Background="{StaticResource Editor.Window.GrayBrush3}">
			<Border.Effect>
				<DropShadowEffect Opacity="0.3" BlurRadius="10" ShadowDepth="0"/>
			</Border.Effect>
			<StackPanel Orientation="Horizontal" HorizontalAlignment="Right" Margin="4,0" VerticalAlignment="Center">
				<Button Content="Clear" Margin="1,0" Click="OnClear_Button_Click" Focusable="False"/>
				<ToggleButton IsChecked="True" Content="Info" Margin="1,0" ToolTip="Toggle information messages"
							  x:Name="toggleInfo" Background="{StaticResource Editor.BlueBrush}"/>
				<ToggleButton IsChecked="True" Content="Warning" Margin="1,0" ToolTip="Toggle warning messages"
							  x:Name="toggleWarning" Background="{StaticResource Editor.OrangeBrush}"/>
				<ToggleButton IsChecked="True" Content="Error" Margin="1,0" ToolTip="Toggle error messages"
							  x:Name="toggleError" Background="{StaticResource Editor.RedBrush}"/>
			</StackPanel>
		</Border>
	</Grid>
</UserControl>
